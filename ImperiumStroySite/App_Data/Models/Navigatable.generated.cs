//------------------------------------------------------------------------------
// <auto-generated>
//   This code was generated by a tool.
//
//    Umbraco.ModelsBuilder v3.0.10.102
//
//   Changes to this file will be lost if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Linq.Expressions;
using System.Web;
using Umbraco.Core.Models;
using Umbraco.Core.Models.PublishedContent;
using Umbraco.Web;
using Umbraco.ModelsBuilder;
using Umbraco.ModelsBuilder.Umbraco;

namespace Umbraco.Web.PublishedContentModels
{
	// Mixin content Type 1075 with alias "navigatable"
	/// <summary>Navigatable</summary>
	public partial interface INavigatable : IPublishedContent
	{
		/// <summary>Навигационный заголовок</summary>
		string NaviTitle { get; }

		/// <summary>Убрать из навигации</summary>
		bool UmbracoNavihide { get; }
	}

	/// <summary>Navigatable</summary>
	[PublishedContentModel("navigatable")]
	public partial class Navigatable : PublishedContentModel, INavigatable
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "navigatable";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Navigatable(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Navigatable, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Навигационный заголовок: Заголовок для навигационных элементов
		///</summary>
		[ImplementPropertyType("naviTitle")]
		public string NaviTitle
		{
			get { return GetNaviTitle(this); }
		}

		/// <summary>Static getter for Навигационный заголовок</summary>
		public static string GetNaviTitle(INavigatable that) { return that.GetPropertyValue<string>("naviTitle"); }

		///<summary>
		/// Убрать из навигации: Не показывать ссылку в навигационных элементах
		///</summary>
		[ImplementPropertyType("umbracoNavihide")]
		public bool UmbracoNavihide
		{
			get { return GetUmbracoNavihide(this); }
		}

		/// <summary>Static getter for Убрать из навигации</summary>
		public static bool GetUmbracoNavihide(INavigatable that) { return that.GetPropertyValue<bool>("umbracoNavihide"); }
	}
}
