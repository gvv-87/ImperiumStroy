//------------------------------------------------------------------------------
// <auto-generated>
//   This code was generated by a tool.
//
//    Umbraco.ModelsBuilder v3.0.10.102
//
//   Changes to this file will be lost if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Linq.Expressions;
using System.Web;
using Umbraco.Core.Models;
using Umbraco.Core.Models.PublishedContent;
using Umbraco.Web;
using Umbraco.ModelsBuilder;
using Umbraco.ModelsBuilder.Umbraco;

namespace Umbraco.Web.PublishedContentModels
{
	/// <summary>Список видов услуг</summary>
	[PublishedContentModel("service_List_Page")]
	public partial class Service_List_Page : PublishedContentModel, INavigatable, ISeoBase, ISitemapBase, IUrlNavigation
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "service_List_Page";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Service_List_Page(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Service_List_Page, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// HeaderBackgroundImage: Фоновая картинка заголовка страницы
		///</summary>
		[ImplementPropertyType("headerBackgroundImage")]
		public IPublishedContent HeaderBackgroundImage
		{
			get { return this.GetPropertyValue<IPublishedContent>("headerBackgroundImage"); }
		}

		///<summary>
		/// Фото для секции рекламы заказа на ремонт
		///</summary>
		[ImplementPropertyType("photo_1")]
		public IPublishedContent Photo_1
		{
			get { return this.GetPropertyValue<IPublishedContent>("photo_1"); }
		}

		///<summary>
		/// Фото к секции сколько будет стоить ремонт
		///</summary>
		[ImplementPropertyType("photo_2")]
		public IPublishedContent Photo_2
		{
			get { return this.GetPropertyValue<IPublishedContent>("photo_2"); }
		}

		///<summary>
		/// Фото к сколько будет стоить ремонт премиум
		///</summary>
		[ImplementPropertyType("photo_3")]
		public IPublishedContent Photo_3
		{
			get { return this.GetPropertyValue<IPublishedContent>("photo_3"); }
		}

		///<summary>
		/// Фото ремонт квартир
		///</summary>
		[ImplementPropertyType("photo_31")]
		public IPublishedContent Photo_31
		{
			get { return this.GetPropertyValue<IPublishedContent>("photo_31"); }
		}

		///<summary>
		/// Фото ремонт коммерческого помещения
		///</summary>
		[ImplementPropertyType("photo_32")]
		public IPublishedContent Photo_32
		{
			get { return this.GetPropertyValue<IPublishedContent>("photo_32"); }
		}

		///<summary>
		/// Фото ремонт частного дома
		///</summary>
		[ImplementPropertyType("photo_33")]
		public IPublishedContent Photo_33
		{
			get { return this.GetPropertyValue<IPublishedContent>("photo_33"); }
		}

		///<summary>
		/// Фото ремонт комнаты
		///</summary>
		[ImplementPropertyType("photo_34")]
		public IPublishedContent Photo_34
		{
			get { return this.GetPropertyValue<IPublishedContent>("photo_34"); }
		}

		///<summary>
		/// Навигационный заголовок: Заголовок для навигационных элементов
		///</summary>
		[ImplementPropertyType("naviTitle")]
		public string NaviTitle
		{
			get { return Umbraco.Web.PublishedContentModels.Navigatable.GetNaviTitle(this); }
		}

		///<summary>
		/// Убрать из навигации: Не показывать ссылку в навигационных элементах
		///</summary>
		[ImplementPropertyType("umbracoNavihide")]
		public bool UmbracoNavihide
		{
			get { return Umbraco.Web.PublishedContentModels.Navigatable.GetUmbracoNavihide(this); }
		}

		///<summary>
		/// Meta Description: Описание для поисковиков.  До 155 символов желательно.
		///</summary>
		[ImplementPropertyType("seoMetaDescription")]
		public string SeoMetaDescription
		{
			get { return Umbraco.Web.PublishedContentModels.SeoBase.GetSeoMetaDescription(this); }
		}

		///<summary>
		/// No follow: Запретить поисковым роботам переходить по ссылкам на странице
		///</summary>
		[ImplementPropertyType("seoNoFollow")]
		public bool SeoNoFollow
		{
			get { return Umbraco.Web.PublishedContentModels.SeoBase.GetSeoNoFollow(this); }
		}

		///<summary>
		/// No index: Запретить индексацию страницы поисковым роботам
		///</summary>
		[ImplementPropertyType("seoNoIndex")]
		public bool SeoNoIndex
		{
			get { return Umbraco.Web.PublishedContentModels.SeoBase.GetSeoNoIndex(this); }
		}

		///<summary>
		/// Title: Заголовок во вкладке браузера и сниппете поисковиков
		///</summary>
		[ImplementPropertyType("seoTitle")]
		public string SeoTitle
		{
			get { return Umbraco.Web.PublishedContentModels.SeoBase.GetSeoTitle(this); }
		}

		///<summary>
		/// Убрать из Sitemap: Не выводить страницу в sitemap.xml
		///</summary>
		[ImplementPropertyType("excludeFromSitemap")]
		public bool ExcludeFromSitemap
		{
			get { return Umbraco.Web.PublishedContentModels.SitemapBase.GetExcludeFromSitemap(this); }
		}

		///<summary>
		/// Альтернативный URL: Переопределить относительную ссылку на страницу
		///</summary>
		[ImplementPropertyType("umbracoUrlName")]
		public string UmbracoUrlName
		{
			get { return Umbraco.Web.PublishedContentModels.UrlNavigation.GetUmbracoUrlName(this); }
		}
	}
}
